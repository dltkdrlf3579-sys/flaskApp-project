# ======================================================================
# Flask Portal 설정 파일 템플릿
# 보안사업장 배포용 - 이 파일을 복사하여 config.ini로 저장하고 설정하세요
# ======================================================================

[DEFAULT]
# 기본 설정
DEBUG = False
SECRET_KEY = CHANGE-THIS-TO-RANDOM-SECRET-KEY
UPLOAD_FOLDER = uploads
EDIT_PASSWORD = CHANGE-THIS-PASSWORD

[DATABASE]
# 로컬 SQLite (업무 데이터) - 일반적으로 변경하지 마세요
LOCAL_DB_PATH = portal.db
LOCAL_DB_TYPE = sqlite

# ======================================================================
# 외부 PostgreSQL 설정 (협력사 마스터 데이터)
# 실제 운영 환경에서는 EXTERNAL_DB_ENABLED를 True로 설정하고 아래 정보를 입력하세요
# ======================================================================
EXTERNAL_DB_ENABLED = False

# PostgreSQL 연결 정보 (실제 값으로 변경 필요)
EXTERNAL_DB_HOST = your-postgresql-server.company.com
EXTERNAL_DB_PORT = 5432
EXTERNAL_DB_NAME = company_database
EXTERNAL_DB_USER = portal_user
EXTERNAL_DB_PASSWORD = SECURE_PASSWORD_HERE
EXTERNAL_DB_SCHEMA = public
EXTERNAL_DB_TABLE = partners_master

[SYNC]
# 데이터 동기화 설정
AUTO_SYNC_ENABLED = True
SYNC_INTERVAL_MINUTES = 30
LAST_SYNC_FILE = .last_sync

[SECURITY]
# 보안 설정
ALLOWED_HOSTS = 127.0.0.1,localhost,your-server-ip
MAX_UPLOAD_SIZE_MB = 10
ALLOWED_EXTENSIONS = pdf,doc,docx,xls,xlsx,png,jpg,jpeg

[LOGGING]
LOG_LEVEL = INFO
LOG_FILE = app.log

[SQL_QUERIES]
# ======================================================================
# 🔧 사용자 정의 SQL 쿼리 설정
# 실제 데이터베이스 구조에 맞게 수정하세요
# ⚠️ 중요: 이 쿼리들은 GitHub 업데이트 시에도 보존됩니다!
# ======================================================================

# 협력사 정보 조회 쿼리 (컬럼명을 실제 DB에 맞게 수정하세요)
PARTNERS_QUERY = SELECT 
    business_reg_no as business_number,
    corp_name as company_name,
    partner_class as partner_class,
    industry_major as business_type_major,
    industry_minor as business_type_minor,
    hazard_work_yn as hazard_work_flag,
    ceo_name as representative,
    corp_address as address,
    avg_age as average_age,
    revenue as annual_revenue
    FROM {schema}.{table}
    WHERE business_reg_no IS NOT NULL
    ORDER BY corp_name

# 사고 정보 조회 쿼리 (컬럼명을 실제 DB에 맞게 수정하세요)
ACCIDENTS_QUERY = SELECT 
    business_reg_no as business_number,
    incident_date as accident_date,
    incident_type as accident_type,
    incident_location as accident_location,
    incident_desc as accident_description,
    injury_grade as injury_level,
    injury_count as injured_count,
    cause_analysis,
    prevent_action as preventive_measures,
    report_date,
    reporter as reporter_name
    FROM {schema}.{table}
    WHERE business_reg_no IS NOT NULL
      AND incident_date >= '2020-01-01'
    ORDER BY incident_date DESC

# ======================================================================
# 설정 가이드:
# 
# 1. 이 파일을 config.ini로 복사하세요
# 2. DEFAULT 섹션의 SECRET_KEY와 EDIT_PASSWORD를 변경하세요
# 3. DATABASE 섹션을 실제 PostgreSQL 정보로 설정하세요
# 4. SQL_QUERIES 섹션의 쿼리를 실제 DB 구조에 맞게 수정하세요
# 5. SECURITY 섹션의 ALLOWED_HOSTS에 서버 IP를 추가하세요
# 
# SQL 쿼리 수정 방법:
# - 실제 컬럼명으로 변경 (예: business_reg_no → business_number)
# - AS 문으로 포털에서 사용할 이름 지정
# - WHERE 조건을 실제 데이터에 맞게 조정
# 
# 예시:
# real_column_name as portal_column_name
# ======================================================================